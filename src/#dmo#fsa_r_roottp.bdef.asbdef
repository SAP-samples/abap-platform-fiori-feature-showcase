managed implementation in class /dmo/fsa_bp_r_roottp unique;
strict ( 2 );
with draft;

define behavior for /DMO/FSA_R_RootTP alias Root
persistent table /dmo/fsa_root_a
draft table /dmo/fsa_root_d
lock master
total etag LastChangedAt
authorization master ( instance )
etag master LocalLastChangedAt
{
  create;
  update;
  delete (features : instance);

  draft determine action Prepare;
  draft action Edit;
  draft action Activate;
  draft action Discard;
  draft action Resume;

  field ( readonly, numbering : managed ) ID;
  field ( mandatory ) Email;
  field ( mandatory : create, readonly : update ) StringProperty;

  action changeProgress parameter /DMO/FSA_D_ChangeProgressP result [1] $self;
  action changeCriticality parameter /DMO/FSA_D_ChangeCriticalityP result [1] $self;

  determination generateOtherData on save { create; }
  determination setIntegerValue on modify { field ProgressIntegerValue; }

  association _Chart { create; with draft; }
  association _Child { create; with draft; }

  mapping for /dmo/fsa_root_a {
    ContactID = contact_id;
    CreatedAt = created_at;
    CreatedBy = created_by;
    CriticalityCode = criticality_code;
    DeleteHidden = delete_hidden;
    DescriptionCustomGrowing = description_customgrowing;
    FieldWithCriticality = field_with_criticality;
    FieldWithPrice = field_with_price;
    FieldWithQuantity = field_with_quantity;
    FieldWithUrl = field_with_url;
    FieldWithUrlText = field_with_url_text;
    ForecastValue = forecast_value;
    ImageUrl = image_url;
    IntegerValue = integer_value;
    IsoCurrency = iso_currency;
    LastChangedAt = last_changed_at;
    LocalLastChangedAt = local_last_changed_at;
    LocalLastChangedBy = local_last_changed_by;
    NavigationID = navigation_id;
    StarsValue = stars_value;
    StringProperty = string_property;
    TargetValue = target_value;
    UpdateHidden = update_hidden;
    ValidFrom = valid_from;
    ValidTo = valid_to;
  }
}

define behavior for /DMO/FSA_R_ChartTP alias Chart
persistent table /dmo/fsa_chart_a
draft table /dmo/fsa_chart_d
lock dependent by _Root
authorization dependent by _Root
//etag master <field_name>
{
  update;
  delete;

  field ( readonly ) ParentID;
  field ( readonly, numbering : managed ) ID;

  static action updateChart;

  association _Root { with draft; }

  mapping for /dmo/fsa_chart_a {
    AreachartDevLowerboundValue = areachart_dev_lowerbound_value;
    AreachartDevUpperboundValue = areachart_dev_upperbound_value;
    AreachartTolLowerboundValue = areachart_tol_lowerbound_value;
    AreachartTolUpperboundValue = areachart_tol_upperbound_value;
    CriticalityCode = criticality_code;
    ForecastValue = forecast_value;
    IntegerValueForAreaChart = integer_value;
    IntegerValueForLineChart = integer_value_for_line_chart;
    ParentID = parent_id;
    TargetValue = target_value;
  }
}

define behavior for /DMO/FSA_R_ChildTP alias Child
persistent table /dmo/fsa_child_a
draft table /dmo/fsa_child_d
lock dependent by _Root
authorization dependent by _Root
//etag master <field_name>
{
  update;
  delete;

  field ( readonly ) ParentId;
  field ( readonly, numbering : managed ) ID;
  field ( readonly : update, mandatory : create ) StringProperty;

  association _Root { with draft; }
  association _Grandchild { create; with draft; }

  mapping for /dmo/fsa_child_a {
    BooleanProperty = boolean_property;
    CriticalityCode = criticality_code;
    FieldWithPercent = field_with_percent;
    ParentID = parent_id;
    StringProperty = string_property;
    StreamFile = stream_file;
    StreamFilename = stream_filename;
    StreamMimeType = stream_mimetype;
  }
}

define behavior for /DMO/FSA_R_GrandchildTP alias Grandchild
persistent table /dmo/fsa_gch_a
draft table /dmo/fsa_gch_d
lock dependent by _Root
authorization dependent by _Root
//etag master <field_name>
{
  update;
  delete;

  field ( readonly, numbering : managed ) ID;
  field ( readonly ) ParentId, RootId;

  association _Root { with draft; }
  association _Child { with draft; }

  mapping for /dmo/fsa_gch_a {
    ParentID = parent_id;
    RootID = root_id;
    StringProperty = string_property;
  }
}