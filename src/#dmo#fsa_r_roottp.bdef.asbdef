managed implementation in class /dmo/fsa_bp_r_roottp unique;
strict ( 2 );
with draft;

define behavior for /DMO/FSA_R_RootTP alias Root
persistent table /dmo/fsa_root_a
draft table /dmo/fsa_root_d
lock master
total etag LastChangedAt
authorization master ( instance )
etag master LocalLastChangedAt
{
  create;
  update (features : instance);
  delete (features : instance);

  draft determine action Prepare { validation validateTimezone; }
  draft action Edit;
  draft action Activate optimized;
  draft action Discard;
  draft action Resume;

  field ( readonly, numbering : managed ) ID;
  field ( mandatory ) Email;
  field ( mandatory : create, readonly : update ) StringProperty;
  field ( features : instance ) TimesChildCreated;
  field ( readonly ) IANATimestamp,  IANATimezone, TotalPieces;

  internal action calcTotalPieces;

  action increaseTimesChildCreated;
  action ( features : instance ) overwriteTimezone deep parameter /DMO/FSA_D_OverwriteTimezoneP;
  factory action (features : instance) copyInstance [1];
  action ( features : instance ) changeProgress parameter /DMO/FSA_D_ChangeProgressP result [1] $self;
  action ( features : instance ) changeCriticality parameter /DMO/FSA_D_ChangeCriticalityP result [1] $self;
  action ( features : instance ) resetTimesChildCreated;

  determination generateOtherData on save { create; }
  determination setIntegerValue on modify { field IntegerValue; }
  determination setTime on modify { field SAPTimezone, Timestamp; }

  validation validateValidTo on save   { create; update; field ValidTo; }
  validation validateTimezone on save { create; update; field SAPTimezone; }

  determine action validateDate { validation validateValidTo; }
  determine action validateChild { validation Child ~ validatePercentage; }

  association _Chart { create; with draft; }
  association _Child { create; with draft; }

  side effects {
    field IntegerValue affects field ProgressIntegerValue, field RadialIntegerValue;
    field NavigationID affects entity _Navigation;
    action changeCriticality affects field CriticalityCode;
    action resetTimesChildCreated affects field TimesChildCreated, permissions ( action resetTimesChildCreated );
    determine action validateDate executed on field ValidTo affects messages;
    determine action validateChild executed on entity _Child affects messages;
    field SAPTimezone affects field IANATimestamp, field IANATimezone;
    field Timestamp affects field IANATimestamp;
    action overwriteTimezone affects $self;
  }

  mapping for /dmo/fsa_root_a corresponding {
    ContactID = contact_id;
    CreatedAt = created_at;
    CreatedBy = created_by;
    CriticalityCode = criticality_code;
    DeleteHidden = delete_hidden;
    DescriptionCustomGrowing = description_customgrowing;
    FieldWithCriticality = field_with_criticality;
    FieldWithPrice = field_with_price;
    FieldWithQuantity = field_with_quantity;
    FieldWithUrl = field_with_url;
    FieldWithUrlText = field_with_url_text;
    ForecastValue = forecast_value;
    ImageUrl = image_url;
    IntegerValue = integer_value;
    IsoCurrency = iso_currency;
    LastChangedAt = last_changed_at;
    LocalLastChangedAt = local_last_changed_at;
    LocalLastChangedBy = local_last_changed_by;
    NavigationID = navigation_id;
    StarsValue = stars_value;
    StringProperty = string_property;
    TargetValue = target_value;
    TimesChildCreated = times_child_created;
    TotalPieces = total_pieces;
    TotalGrandchildPieces = total_granddchild_pieces;
    UpdateHidden = update_hidden;
    SAPTimezone = time_zone;
    ValidFrom = valid_from;
    ValidTo = valid_to;
    TypeAccp = type_accp;
    TypeBool = type_bool;
    TypeChar = type_char;
    TypeClnt = type_clnt;
    TypeCuky = type_cuky;
    TypeCurr = type_curr;
    TypeDecAmount = type_dec_amount;
    TypeDatn = type_datn;
    TypeDats = type_dats;
    TypeDec = type_dec;
    TypeDf16Dec = type_df16_dec;
    TypeDf34Dec = type_df34_dec;
    TypeFltp = type_fltp;
    TypeInt1 = type_int1;
    TypeInt2 = type_int2;
    TypeInt4 = type_int4;
    TypeInt8 = type_int8;
    TypeNumc = type_numc;
    TypeQuan = type_quan;
    TypeFltpQuan = type_fltp_quan;
    TypeRawstring = type_rawstring;
    TypeSstring = type_sstring;
    TypeString = type_string;
    TypeTimn = type_timn;
    TypeTims = type_tims;
    TypeUtclong = type_utclong;
    TypeTzntstmps = type_tzntstmps;
    TypeTzntstmpl = type_tzntstmpl;
    TypeDecTime = type_dec_time;
    StreamMimeType = stream_mimetype;
    TypeLang = type_lang;
    TypeUnit = type_unit;
  }
}

define behavior for /DMO/FSA_R_ChartTP alias Chart
persistent table /dmo/fsa_chart_a
draft table /dmo/fsa_chart_d
lock dependent by _Root
authorization dependent by _Root
{
  update;
  delete;

  field ( readonly ) ParentID;
  field ( readonly, numbering : managed ) ID;

  static action updateChart;

  association _Root { with draft; }

  mapping for /dmo/fsa_chart_a corresponding{
    AreachartDevLowerboundValue = areachart_dev_lowerbound_value;
    AreachartDevUpperboundValue = areachart_dev_upperbound_value;
    AreachartTolLowerboundValue = areachart_tol_lowerbound_value;
    AreachartTolUpperboundValue = areachart_tol_upperbound_value;
    CriticalityCode = criticality_code;
    ForecastValue = forecast_value;
    IntegerValueForAreaChart = integer_value;
    IntegerValueForLineChart = integer_value_for_line_chart;
    ParentID = parent_id;
    TargetValue = target_value;
  }
}

define behavior for /DMO/FSA_R_ChildTP alias Child
persistent table /dmo/fsa_child_a
draft table /dmo/fsa_child_d
lock dependent by _Root
authorization dependent by _Root
{
  update;
  delete (features : instance);

  field ( readonly ) ParentId;
  field ( readonly, numbering : managed ) ID;
  field ( readonly : update, mandatory : create ) StringProperty;

  determination calculateTotalPieces on modify { field ChildPieces; }
  validation validatePercentage on save { create; update;  }

  side effects {
    field ChildPieces affects field _Root.TotalPieces;
    field BooleanProperty affects permissions ( delete );
  }

  association _Root { with draft; }
  association _Grandchild { create; with draft; }

  mapping for /dmo/fsa_child_a corresponding{
    BooleanProperty = boolean_property;
    CriticalityCode = criticality_code;
    FieldWithPercent = field_with_percent;
    ParentID = parent_id;
    StringProperty = string_property;
    StreamFile = stream_file;
    StreamFilename = stream_filename;
    StreamMimeType = stream_mimetype;
    ChildPieces = child_pieces;
  }
}

define behavior for /DMO/FSA_R_GrandchildTP alias Grandchild
persistent table /dmo/fsa_gch_a
draft table /dmo/fsa_gch_d
lock dependent by _Root
authorization dependent by _Root
{
  update;
  delete;

  field ( readonly, numbering : managed ) ID;
  field ( readonly ) ParentId, RootId;

  determination calculateGrandchildPieces on modify { field GrandchildPieces; }

  association _Root { with draft; }
  association _Child { with draft; }

//  side effects {
//    field GrandchildPieces affects field _Child._Root.TotalGrandchildPieces;
//  }

  mapping for /dmo/fsa_gch_a corresponding{
    ParentID = parent_id;
    RootID = root_id;
    StringProperty = string_property;
    GrandchildPieces = grandchild_pieces;
  }
}